{"version":3,"file":"static/js/352.f35b27e7.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","helpers/MoviesAPI.js","components/Searchbar/SearchBar.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ColorRing\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n","import styled from 'styled-components';\n\nexport const Grid = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n  margin-top: 20px;\n  margin-bottom: 30px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst GridItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst ItemImage = styled.img`\n  width: 100%;\n  height: 360px;\n  margin-bottom: 15px;\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n  transform: scale(1.03);\n  `;\n\nconst Link = styled(NavLink)`\n  &:hover {\n    color: orangered;\n  }\n`;\n\nconst MovieName = styled.h3`\n  text-align: center;\n`;\n\nexport { GridItem, ItemImage, Link, MovieName };\n","import { Link, MovieName } from './MoviesItem.styled';\nimport { useLocation } from 'react-router-dom';\nimport { GridItem, ItemImage } from './MoviesItem.styled';\n\nexport const MoviesItem = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n  return movies.map(movie => {\n    const path =\n      location.pathname === '/' ? `movies/${movie.id}` : `${movie.id}`;\n\n    return (\n      <GridItem key={movie.id}>\n        <Link to={path} state={{ from: location }}>\n          <ItemImage\n            src={\n              movie.poster_path\n                ? `http://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : 'https://lajoyalink.com/wp-content/uploads/2018/03/Movie.jpg'\n            }\n            alt={movie.title}\n          />\n          <MovieName>\n            <span>\n              {movie.release_date ? movie.release_date.slice(0, 4) : 'ðŸ˜±'}\n            </span>\n            ,{movie.title}\n          </MovieName>\n        </Link>\n      </GridItem>\n    );\n  });\n};\n","import PropTypes from 'prop-types';\nimport { Grid } from './MoviesList.styled';\nimport { MoviesItem } from 'components/MoviesItem/MoviesItem';\n\nexport const MoviesList = ({ movies }) => (\n  <Grid>\n    <MoviesItem movies={movies} />\n  </Grid>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZWZmYTlmNjVjYWUyNWIxZjU5N2IyNDhmZmZiZWQzMiIsInN1YiI6IjY1NGI2NjNhMWFjMjkyN2IyZGNmNzBiYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Wt2WcEuurlXNU4SFGIcSzLE3fb4Vg87kUc19yKbL2iA';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getMovies = time_window => {\n  return axios.get(`/trending/movie/${time_window}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`/movie/${id}`);\n};\n\nexport const getCast = id => {\n  return axios.get(`/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return axios.get(`/movie/${id}/reviews`);\n};\n\nexport const fetchMoviesBySearch = (query, page) => {\n  return axios.get(`/search/movie?query=${query}&page=${page}`);\n};\n","import styled from 'styled-components';\n\nexport const SearchBarHeader = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst FormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n  opacity: 1;\n`;\n\nconst FormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nconst FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n  font: inherit;\n  font-size: 18px;\n`;\n\nexport { Form, FormButton, FormButtonLabel, FormInput };\n","import {\n  Form,\n  FormButton,\n  FormButtonLabel,\n  FormInput,\n} from './SearchForm.styled';\nimport { FiSearch } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ query, saveName }) => {\n  return (\n    <Form>\n      <FormButton type=\"submit\">\n        <FiSearch />\n        <FormButtonLabel>Search</FormButtonLabel>\n      </FormButton>\n\n      <FormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        name=\"searchQuery\"\n        value={query}\n        onChange={saveName}\n      />\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  query: PropTypes.string.isRequired,\n  saveName: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { SearchBarHeader } from './SearchBar.styled';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nexport const Searchbar = ({ onGetMovies }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      toast.info('Enter query');\n      return;\n    }\n    onGetMovies(searchQuery);\n    setSearchQuery('');\n    const form = e.target;\n    form.reset();\n  };\n\n  const saveName = e => {\n    const { value } = e.target;\n    setSearchQuery(value);\n  };\n  return (\n    <SearchBarHeader onSubmit={onHandleSubmit}>\n      <SearchForm query={searchQuery} saveName={saveName} />\n    </SearchBarHeader>\n  );\n};\n\nSearchbar.propTypes = {\n  onGetMovies: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchMoviesBySearch } from 'helpers/MoviesAPI';\nimport ReactPaginate from 'react-paginate';\nimport { toast } from 'react-toastify';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(0);\n\n  const onGetQuery = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    setPage(1);\n    setPageCount(0);\n  };\n\n  const MovieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!MovieName) {\n      return;\n    }\n    const getMoviesBySearch = async () => {\n      try {\n        setIsLoading(true);\n        setMovies([]);\n        setError(null);\n        const response = await fetchMoviesBySearch(MovieName, page);\n        if (response.data.total_results === 0) {\n          console.log('waht');\n          return toast.error('Nothing found for your request');\n        }\n        setMovies(response.data.results);\n        console.log(response.data);\n        setPageCount(response.data.total_pages);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMoviesBySearch();\n  }, [MovieName, page]);\n\n  const handlePageClick = ({ selected }) => {\n    console.log(selected);\n    setPage(selected + 1);\n  };\n\n  return (\n    <>\n      <Searchbar onGetMovies={onGetQuery} />\n      {movies.length !== 0 && !isLoading && <MoviesList movies={movies} />}\n      {error && toast.error(`${error.message}`)}\n      {isLoading && <Loader />}\n      {pageCount > 1 && (\n        <ReactPaginate\n          breakLabel=\"...\"\n          nextLabel=\"next >\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={1}\n          marginPagesDisplayed={1}\n          pageCount={pageCount}\n          previousLabel=\"< previous\"\n          containerClassName={'pagination'}\n          previousLinkClassName={'pagination__link'}\n          nextLinkClassName={'pagination__link'}\n          disabledClassName={'pagination__link--disabled'}\n          activeClassName={'pagination__link--active'}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Grid","styled","GridItem","ItemImage","Link","NavLink","MovieName","MoviesItem","movies","location","useLocation","console","log","map","movie","path","pathname","id","to","state","from","src","poster_path","alt","title","release_date","slice","MoviesList","axios","getMovies","time_window","getMovieById","getCast","getReviews","fetchMoviesBySearch","query","page","SearchBarHeader","Form","FormButton","FormButtonLabel","FormInput","SearchForm","saveName","type","autoComplete","autoFocus","placeholder","name","value","onChange","Searchbar","onGetMovies","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","target","reset","toast","useSearchParams","searchParams","setSearchParams","setMovies","isLoading","setIsLoading","error","setError","setPage","pageCount","setPageCount","get","useEffect","getMoviesBySearch","response","data","total_results","results","total_pages","length","message","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName"],"sourceRoot":""}