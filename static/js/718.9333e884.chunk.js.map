{"version":3,"file":"static/js/718.9333e884.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","helpers/MoviesAPI.js","components/BackLink/BackLink.styled.jsx","components/MovieDetailsItem/MovieDetailsItem.styled.jsx","components/MovieDetailsItem/MovieDetailsItem.jsx","helpers/normalizeDate.js","pages/MovieDetails.jsx"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ColorRing\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n  />\n);\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZWZmYTlmNjVjYWUyNWIxZjU5N2IyNDhmZmZiZWQzMiIsInN1YiI6IjY1NGI2NjNhMWFjMjkyN2IyZGNmNzBiYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Wt2WcEuurlXNU4SFGIcSzLE3fb4Vg87kUc19yKbL2iA';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getMovies = time_window => {\n  return axios.get(`/trending/movie/${time_window}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`/movie/${id}`);\n};\n\nexport const getCast = id => {\n  return axios.get(`/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return axios.get(`/movie/${id}/reviews`);\n};\n\nexport const fetchMoviesBySearch = (query, page) => {\n  return axios.get(`/search/movie?query=${query}&page=${page}`);\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieName = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nexport const InfoTable = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 350px;\n  height: 450px;\n`;\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n`;\n\nexport const StyledSubTitle = styled.h3`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 15px;\n`;\n\nexport const StyledSection = styled.div`\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n\n  &:not(:last-child) {\n    border-bottom: 2px solid black;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid orangered;\n\n  &.active {\n    color: white;\n    background: linear-gradient(\n      to right bottom,\n      hsl(154, 97%, 62%),\n      hsl(225, 97%, 62%)\n    );\n    border: none;\n  }\n`;\n\nexport const MoreInfoAbout = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoTable = styled.ul``;\n\nexport const MovieTableItem = styled.li`\n  margin-bottom: 28px;\n`;\nexport const MovieTableItemName = styled.span`\n  display: inline-block;\n  width: 120px;\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const MovieTableItemText = styled.p``;\n","import { Outlet } from 'react-router-dom';\nimport {\n  ImageWrapper,\n  InfoTable,\n  MoreInfoAbout,\n  MovieInfoTable,\n  MovieName,\n  MovieTableItem,\n  MovieTableItemName,\n  MovieTableItemText,\n  StyledImage,\n  StyledLink,\n  StyledSection,\n  StyledSubTitle,\n} from './MovieDetailsItem.styled';\nimport { normalizeDate } from 'helpers/normalizeDate';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense } from 'react';\n\nexport const MovieDetailsItem = ({ movie }) => {\n  const userScore = Number((movie.vote_average / 10) * 100).toFixed(0);\n  let releaseDate;\n  if (movie.release_date) {\n    releaseDate = normalizeDate(movie.release_date.split('-').join(','));\n  }\n  let country;\n  if (movie.production_countries.length > 0) {\n    country = movie.production_countries[0].name;\n  }\n  return (\n    <>\n      <MovieName>{movie.title}</MovieName>\n      <StyledSection>\n        <InfoTable>\n          <ImageWrapper>\n            <StyledImage\n              src={\n                movie.poster_path\n                  ? `http://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : 'https://lajoyalink.com/wp-content/uploads/2018/03/Movie.jpg'\n              }\n              alt={movie.title}\n            />\n          </ImageWrapper>\n          <MovieInfoTable>\n            <MovieTableItem>\n              <MovieTableItemText>\n                <MovieTableItemName>User score:</MovieTableItemName> {userScore}\n                %\n              </MovieTableItemText>\n            </MovieTableItem>\n            <MovieTableItem>\n              {' '}\n              {movie.tagline && (\n                <MovieTableItemText>\n                  <MovieTableItemName>Tagline:</MovieTableItemName>{' '}\n                  {movie.tagline}\n                </MovieTableItemText>\n              )}\n            </MovieTableItem>\n            <MovieTableItem>\n              <MovieTableItemText>\n                <MovieTableItemName>Genres:</MovieTableItemName>{' '}\n                {movie.genres.length > 0\n                  ? movie.genres.map((genre, index) => {\n                      if (index !== movie.genres.length - 1) {\n                        return `${genre.name}, `;\n                      }\n                      return `${genre.name}`;\n                    })\n                  : 'No information'}\n              </MovieTableItemText>\n            </MovieTableItem>\n            <MovieTableItem>\n              <MovieTableItemText>\n                <MovieTableItemName>Release date:</MovieTableItemName>{' '}\n                {releaseDate ? releaseDate : 'No information'}\n              </MovieTableItemText>\n            </MovieTableItem>\n            <MovieTableItem>\n              <MovieTableItemText>\n                <MovieTableItemName>Country:</MovieTableItemName>{' '}\n                {country ? country : 'No information'}\n              </MovieTableItemText>\n            </MovieTableItem>\n            <MovieTableItem>\n              <MovieTableItemText>\n                <MovieTableItemName>Duration:</MovieTableItemName>{' '}\n                {movie.runtime} min\n              </MovieTableItemText>\n            </MovieTableItem>\n          </MovieInfoTable>\n        </InfoTable>\n      </StyledSection>\n      <StyledSection>\n        <StyledSubTitle>What the movie {movie.title} is about:</StyledSubTitle>\n        <p>{movie.overview}</p>\n      </StyledSection>\n      <StyledSection>\n        <StyledSubTitle>Additional information</StyledSubTitle>\n        <MoreInfoAbout>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </MoreInfoAbout>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </StyledSection>\n    </>\n  );\n};\n","import { format } from 'date-fns';\n\nexport const normalizeDate = date => {\n  return format(new Date(date), 'PPP');\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink/BackLink.styled';\nimport { getMovieById } from 'helpers/MoviesAPI';\nimport { MovieDetailsItem } from 'components/MovieDetailsItem/MovieDetailsItem';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieById(movieId);\n        setMovieInfo(response.data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref.current}>Back to movies</BackLink>\n      {error && toast.error(`${error.message}`)}\n      {isLoading && <Loader />}\n      {movieInfo && <MovieDetailsItem movie={movieInfo} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","axios","getMovies","time_window","getMovieById","id","getCast","getReviews","fetchMoviesBySearch","query","page","StyledLink","styled","Link","BackLink","to","children","size","MovieName","InfoTable","ImageWrapper","StyledImage","StyledSubTitle","StyledSection","NavLink","MoreInfoAbout","MovieInfoTable","MovieTableItem","MovieTableItemName","MovieTableItemText","MovieDetailsItem","releaseDate","date","country","movie","userScore","Number","vote_average","toFixed","release_date","split","join","format","Date","production_countries","length","name","title","src","poster_path","alt","tagline","genres","map","genre","index","runtime","overview","Suspense","fallback","useState","movieInfo","setMovieInfo","error","setError","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieDetails","response","data","current","toast","message"],"sourceRoot":""}