{"version":3,"file":"static/js/718.c3bc3059.chunk.js","mappings":"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","sources":["helpers/MoviesAPI.js","components/BackLink/BackLink.styled.jsx","components/MovieDetailsItem/MovieDetailsItem.styled.jsx","components/MovieDetailsItem/MovieDetailsItem.jsx","helpers/normalizeDate.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZWZmYTlmNjVjYWUyNWIxZjU5N2IyNDhmZmZiZWQzMiIsInN1YiI6IjY1NGI2NjNhMWFjMjkyN2IyZGNmNzBiYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Wt2WcEuurlXNU4SFGIcSzLE3fb4Vg87kUc19yKbL2iA';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getMovies = time_window => {\n  return axios.get(`/trending/movie/${time_window}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`/movie/${id}`);\n};\n\nexport const getCast = id => {\n  return axios.get(`/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return axios.get(`/movie/${id}/reviews`);\n};\n\nexport const fetchMoviesBySearch = (query, page) => {\n  return axios.get(`/search/movie?query=${query}&page=${page}`);\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieName = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nexport const InfoTable = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 350px;\n  height: 450px;\n`;\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n`;\n\nexport const StyledSubTitle = styled.h3`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 15px;\n`;\n\nexport const StyledSection = styled.div`\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n\n  &:not(:last-child) {\n    border-bottom: 2px solid black;\n  }\n`;\n","import { Link, Outlet } from 'react-router-dom';\nimport {\n  ImageWrapper,\n  InfoTable,\n  MovieName,\n  StyledImage,\n  StyledSection,\n  StyledSubTitle,\n} from './MovieDetailsItem.styled';\nimport { normalizeDate } from 'helpers/normalizeDate';\n\nexport const MovieDetailsItem = ({ movie }) => {\n  const userScore = Number((movie.vote_average / 10) * 100).toFixed(0);\n  let releaseDate;\n  if (movie.release_date) {\n    releaseDate = normalizeDate(movie.release_date.split('-').join(','));\n  }\n  let country;\n  if (movie.production_countries.length > 0) {\n    country = movie.production_countries[0].name;\n  }\n  return (\n    <>\n      <MovieName>{movie.title}</MovieName>\n      <StyledSection>\n        <InfoTable>\n          <ImageWrapper>\n            <StyledImage\n              src={\n                movie.poster_path\n                  ? `http://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : 'https://lajoyalink.com/wp-content/uploads/2018/03/Movie.jpg'\n              }\n              alt={movie.title}\n            />\n          </ImageWrapper>\n          <div>\n            <p>User score: {userScore}%</p>\n            {movie.tagline && <p>Tagline: {movie.tagline}</p>}\n            <p>\n              Genres:{' '}\n              {movie.genres.length > 0\n                ? movie.genres.map((genre, index) => {\n                    if (index !== movie.genres.length - 1) {\n                      return `${genre.name}, `;\n                    }\n                    return `${genre.name}`;\n                  })\n                : 'No information'}\n            </p>\n            <p>Release date: {releaseDate ? releaseDate : 'No information'}</p>\n            <p>Country: {country ? country : 'No information'}</p>\n            <p>Duration: {movie.runtime} min</p>\n          </div>\n        </InfoTable>\n      </StyledSection>\n      <StyledSection>\n        <StyledSubTitle>What the movie {movie.title} is about:</StyledSubTitle>\n        <p>{movie.overview}</p>\n      </StyledSection>\n      <StyledSection>\n        <StyledSubTitle>Additional information</StyledSubTitle>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </StyledSection>\n    </>\n  );\n};\n","import { format } from 'date-fns';\n\nexport const normalizeDate = date => {\n  return format(new Date(date), 'PPP');\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink/BackLink.styled';\nimport { getMovieById } from 'helpers/MoviesAPI';\nimport { MovieDetailsItem } from 'components/MovieDetailsItem/MovieDetailsItem';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getMovieDetails = async () => {\n      try {\n        console.log(movieId);\n        const response = await getMovieById(movieId);\n        console.log(response.data);\n        setMovieInfo(response.data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n      {movieInfo && <MovieDetailsItem movie={movieInfo} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","getMovies","time_window","getMovieById","id","getCast","getReviews","fetchMoviesBySearch","query","page","StyledLink","styled","Link","BackLink","to","children","size","MovieName","InfoTable","ImageWrapper","StyledImage","StyledSubTitle","StyledSection","MovieDetailsItem","releaseDate","date","country","movie","userScore","Number","vote_average","toFixed","release_date","split","join","format","Date","production_countries","length","name","title","src","poster_path","alt","tagline","genres","map","genre","index","runtime","overview","useState","movieInfo","setMovieInfo","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","console","log","response","data","message"],"sourceRoot":""}