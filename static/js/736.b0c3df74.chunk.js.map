{"version":3,"file":"static/js/736.b0c3df74.chunk.js","mappings":"0RAEMA,EAAWC,EAAAA,GAAAA,GAAH,4EAMRC,EAAWD,EAAAA,GAAAA,GAAH,gEAIRE,EAAcF,EAAAA,GAAAA,IAAH,+DAKXG,EAAYH,EAAAA,GAAAA,GAAH,sBAETI,EAAYJ,EAAAA,GAAAA,EAAH,sB,SC4Cf,EApDa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAQJ,GAFjB,OAERK,EAFQ,OAGdR,EAAUQ,EAASC,KAAKC,MAHV,gDAKdR,EAAS,EAAD,IALM,yDAAH,qDAQfI,GATC,CAUF,GAAE,CAACH,KAGF,gCACGF,GACoB,IAAlBF,EAAOY,SACN,yBAAK,4CAET,SAACnB,EAAD,UACGO,GACCA,EAAOa,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACnD,OACE,UAACvB,EAAD,YACE,SAACC,EAAD,CACEuB,IACEJ,EAAY,4CAC6BA,GA/BzD,8EAkCcK,IAAKJ,EACLK,MAAM,SAER,SAACxB,EAAD,UAAYoB,KACZ,SAACnB,EAAD,UAAYoB,MAXCJ,EAclB,QAIV,C,sKCzDDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAFE,6NAIK,IAAMC,EAAY,SAAAC,GACvB,OAAOF,EAAAA,EAAAA,IAAA,0BAA6BE,GACrC,EAEYC,EAAe,SAAAX,GAC1B,OAAOQ,EAAAA,EAAAA,IAAA,iBAAoBR,GAC5B,EAEYN,EAAU,SAAAM,GACrB,OAAOQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,YACR,EAEYY,EAAa,SAAAZ,GACxB,OAAOQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,YACR,EAEYa,EAAsB,SAACC,EAAOC,GACzC,OAAOP,EAAAA,EAAAA,IAAA,8BAAiCM,EAAjC,iBAA+CC,GACvD,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","helpers/MoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nconst CastItem = styled.li`\n  flex-basis: calc((100% - 60px) / 4);\n`;\n\nconst ActorAvatar = styled.img`\n  max-width: 150px;\n  height: 225px;\n`;\n\nconst ActorName = styled.h3``;\n\nconst ActorRole = styled.p``;\n\nexport { CastList, CastItem, ActorAvatar, ActorName, ActorRole };\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCast } from 'helpers/MoviesAPI';\nimport {\n  ActorAvatar,\n  ActorName,\n  ActorRole,\n  CastItem,\n  CastList,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getActors = async () => {\n      try {\n        const response = await getCast(movieId);\n        setActors(response.data.cast);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getActors();\n  }, [movieId]);\n\n  return (\n    <>\n      {error ||\n        (actors.lentgh === 0 && (\n          <div>We don't know anything about the cast.</div>\n        ))}\n      <CastList>\n        {actors &&\n          actors.map(({ id, profile_path, name, original_name, character }) => {\n            return (\n              <CastItem key={id}>\n                <ActorAvatar\n                  src={\n                    profile_path\n                      ? `http://image.tmdb.org/t/p/original${profile_path}`\n                      : defaultImg\n                  }\n                  alt={name}\n                  width=\"150\"\n                />\n                <ActorName>{original_name}</ActorName>\n                <ActorRole>{character}</ActorRole>\n              </CastItem>\n            );\n          })}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZWZmYTlmNjVjYWUyNWIxZjU5N2IyNDhmZmZiZWQzMiIsInN1YiI6IjY1NGI2NjNhMWFjMjkyN2IyZGNmNzBiYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Wt2WcEuurlXNU4SFGIcSzLE3fb4Vg87kUc19yKbL2iA';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getMovies = time_window => {\n  return axios.get(`/trending/movie/${time_window}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`/movie/${id}`);\n};\n\nexport const getCast = id => {\n  return axios.get(`/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return axios.get(`/movie/${id}/reviews`);\n};\n\nexport const fetchMoviesBySearch = (query, page) => {\n  return axios.get(`/search/movie?query=${query}&page=${page}`);\n};\n"],"names":["CastList","styled","CastItem","ActorAvatar","ActorName","ActorRole","useState","actors","setActors","error","setError","movieId","useParams","useEffect","getActors","getCast","response","data","cast","lentgh","map","id","profile_path","name","original_name","character","src","alt","width","axios","getMovies","time_window","getMovieById","getReviews","fetchMoviesBySearch","query","page"],"sourceRoot":""}